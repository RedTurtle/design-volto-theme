version: '3'

services:
  backend:
    image: ghcr.io/redturtle/dist.design.plone:merge
    ports:
      - "8080:8080"
    environment:
      - SITE=Plone
    #  - 'ADDONS=plone.restapi==8.29.0 plone.volto==4.0.0a13 plone.rest==2.0.0a5'
    # TODO: profiles per demo content ?
      - 'PROFILES=design.plone.policy:default'
    # Uncomment if you need the data to be persistent
    # volumes:
    #   - ./data/:/data/
    labels:
      - traefik.enable=true
      # SERVICE
      - traefik.http.services.plone-backend.loadbalancer.server.port=8080
      # Plone API
      - traefik.http.routers.backend.rule=Host(`localhost`) && PathPrefix(`/++api++`)
      - traefik.http.routers.backend.service=plone-backend
      - "traefik.http.middlewares.backend.replacepathregex.regex=^/\\+\\+api\\+\\+($$|/.*)"
      - "traefik.http.middlewares.backend.replacepathregex.replacement=/VirtualHostBase/http/plone.localhost/Plone/++api++/VirtualHostRoot/$$1"
      - traefik.http.routers.backend.middlewares=gzip,backend

  frontend:
    build: .
    ports:
      - "3000:3000"
    environment:
      RAZZLE_API_PATH: http://localhost
      # These are needed in a Docker environment since the
      # routing needs to be amended. You can point to the
      # internal network alias.
      RAZZLE_INTERNAL_API_PATH: http://backend:8080/Plone
      RAZZLE_DEV_PROXY_API_PATH: http://backend:8080/Plone
    depends_on:
      - backend
    labels:
      - traefik.enable=true
      # SERVICE
      - traefik.http.services.plone-frontend.loadbalancer.server.port=3000
      # HOSTS: Main
      - traefik.http.routers.frontend.rule=Host(`localhost`)
      - traefik.http.routers.frontend.service=plone-frontend
      - traefik.http.routers.frontend.middlewares=gzip

  reverse-proxy:
    # The official v2 Traefik docker image
    image: traefik:v2.8
    # Enables the web UI and tells Traefik to listen to docker
    command: --api.insecure=true --providers.docker
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8888:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - traefik.http.middlewares.gzip.compress=true
      - traefik.http.middlewares.gzip.compress.excludedcontenttypes=image/png, image/jpeg, font/woff2

